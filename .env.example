# Noah Backup - Complete Environment Configuration Template
# Copy this file to .env and update the values for your environment
# IMPORTANT: Never commit .env to version control!

#==============================================================================
# GENERAL APPLICATION SETTINGS
#==============================================================================

# Application Environment (development, staging, production)
NOAH_ENV=development

# Application Port (default: 8080)
PORT=8080

# Active Spring Profile
SPRING_PROFILES_ACTIVE=development

#==============================================================================
# JWT AUTHENTICATION SETTINGS
#==============================================================================

# JWT Secret Key - MUST BE CHANGED IN PRODUCTION!
# Generate a strong secret key (minimum 32 characters)
# Example: openssl rand -base64 64
JWT_SECRET=NoahBackupJWTSecretKey2024!ForSecureAPIAuthentication

# JWT Token Expiration (24 hours in milliseconds)
JWT_EXPIRATION=86400000

# JWT Refresh Token Expiration (7 days in milliseconds) 
JWT_REFRESH_EXPIRATION=604800000

#==============================================================================
# S3 STORAGE CONFIGURATION
#==============================================================================

# S3 Access Credentials
AWS_ACCESS_KEY_ID=your-access-key-here
AWS_SECRET_ACCESS_KEY=your-secret-key-here

# S3 Region (e.g., us-east-1, eu-west-1)
AWS_REGION=us-east-1

# S3 Endpoint (leave empty for AWS S3, set for MinIO/other providers)
# Example for MinIO: http://localhost:9000
S3_ENDPOINT=

# Default Backup Bucket Name
S3_BUCKET_NAME=noah-backup-storage

# Path Style Access (true for MinIO, false for AWS S3)
S3_PATH_STYLE_ACCESS=false

#==============================================================================
# NOAH BACKUP SECURITY (RECOMMENDED)
#==============================================================================

# Master encryption key for securing sensitive data (Base64 encoded)
# Generate with: openssl rand -base64 32
MASTER_KEY=your-base64-encoded-master-key-here

# Backup password for additional security layer
# Use a strong password with mixed case, numbers, and symbols
BACKUP_PASSWORD=your-strong-backup-password-here

# Security validation levels
NOAH_SECURITY_LEVEL=high   # Options: low, medium, high, strict

# Enable/disable specific security features
NOAH_ENCRYPTION_ENABLED=true
NOAH_SECURE_DELETE_ENABLED=true
NOAH_AUDIT_LOGGING_ENABLED=true

# Temporary file encryption settings
NOAH_ENCRYPT_TEMP_FILES=true
NOAH_TEMP_FILE_PREFIX=noah-backup-secure

#==============================================================================
# BACKUP CONFIGURATION
#==============================================================================

# Enable/Disable Backup System
NOAH_BACKUP_ENABLED=true

# Enable Weekly Backups
NOAH_BACKUP_WEEKLY_ENABLED=true

# Backup Timeout (in minutes)
NOAH_BACKUP_TIMEOUT_MINUTES=60

# Backup Paths (semicolon-separated list)
# Windows Example: C:\Users\%USERNAME%\Documents;C:\Users\%USERNAME%\Desktop
# Linux Example: /home/$USER/Documents;/home/$USER/Desktop
NOAH_BACKUP_PATHS=C:\temp\test-backup;C:\Users\%USERNAME%\Documents\TestFiles

#==============================================================================
# SCHEDULING CONFIGURATION
#==============================================================================

# Daily Backup Schedule (Cron expression)
# Default: 2:00 AM daily - "0 0 2 * * ?"
# Development: Every 5 minutes - "0 */5 * * * ?"
NOAH_SCHEDULE_DAILY=0 */5 * * * ?

# Weekly Backup Schedule (Cron expression)  
# Default: 1:00 AM every Sunday - "0 0 1 * * SUN"
# Development: Every 10 minutes - "0 */10 * * * ?"
NOAH_SCHEDULE_WEEKLY=0 */10 * * * ?

#==============================================================================
# NOTIFICATION SETTINGS
#==============================================================================

# Enable Notifications
NOAH_NOTIFICATIONS_ENABLED=true

# Notification Channels (comma-separated: log,email,slack,teams)
NOAH_NOTIFICATIONS_CHANNELS=log,email

# Email Notifications
NOAH_NOTIFICATIONS_EMAIL_ENABLED=false
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
EMAIL_FROM=noah-backup@company.com
EMAIL_TO=admin@company.com

# Slack Notifications
NOAH_NOTIFICATIONS_SLACK_ENABLED=false
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#backups
SLACK_USERNAME=Noah Backup

# Microsoft Teams Notifications
NOAH_NOTIFICATIONS_TEAMS_ENABLED=false
TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/YOUR-TEAMS-WEBHOOK

#==============================================================================
# SECURITY SETTINGS
#==============================================================================

# Enable CORS (true for development, false for production)
NOAH_SECURITY_CORS_ENABLED=true

# Enable Rate Limiting
NOAH_SECURITY_RATE_LIMITING_ENABLED=false

# Maximum Requests Per Hour
NOAH_SECURITY_MAX_REQUESTS_PER_HOUR=1000

# Enable API Documentation (true for development, false for production)
NOAH_API_DOCS_ENABLED=true

#==============================================================================
# LOGGING CONFIGURATION
#==============================================================================

# Log Level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO

# Noah Backup Log Level
NOAH_LOG_LEVEL=DEBUG

# Log Directory
LOG_DIRECTORY=logs

# Log Retention (days)
LOG_RETENTION_DAYS=30

#==============================================================================
# REPORT SETTINGS
#==============================================================================

# Enable Daily Reports
NOAH_REPORTS_DAILY_ENABLED=true

# Enable Weekly Reports
NOAH_REPORTS_WEEKLY_ENABLED=true

# Report Retention (days)
NOAH_REPORTS_RETENTION_DAYS=90

# Enable Report Cleanup
NOAH_REPORTS_CLEANUP_ENABLED=true

#==============================================================================
# MONITORING SETTINGS
#==============================================================================

# Enable Actuator Endpoints
MANAGEMENT_ENDPOINTS_ENABLED=true

# Exposed Actuator Endpoints (comma-separated)
MANAGEMENT_ENDPOINTS_INCLUDE=health,info,metrics,scheduledtasks

# Health Check Details (never, when-authorized, always)
MANAGEMENT_HEALTH_SHOW_DETAILS=when-authorized

#==============================================================================
# WINDOWS SPECIFIC SETTINGS
#==============================================================================

# VSS (Volume Shadow Copy Service) Settings
NOAH_VSS_ENABLED=true
NOAH_VSS_TIMEOUT_SECONDS=300

# Windows Backup Paths (semicolon-separated)
NOAH_WINDOWS_BACKUP_PATHS=C:\Users;C:\ProgramData;D:\Data

#==============================================================================
# DEVELOPMENT SETTINGS
#==============================================================================

# Enable Debug Mode (development only)
DEBUG_MODE=false

# Enable Test Mode (shorter intervals, test paths)
TEST_MODE=true

# Development Server Port
DEV_SERVER_PORT=8080

#===============================================================================
# PROVIDER-SPECIFIC EXAMPLES
#===============================================================================

# AWS S3 Standard Configuration
# AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
# AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# AWS_REGION=us-west-2
# S3_BUCKET_NAME=my-company-backups

# MinIO Configuration
# AWS_ACCESS_KEY_ID=minioadmin
# AWS_SECRET_ACCESS_KEY=minioadmin
# AWS_REGION=us-east-1
# S3_BUCKET_NAME=noah-backups
# S3_ENDPOINT=http://localhost:9000
# S3_PATH_STYLE_ACCESS=true

# AWS Lightsail Object Storage Configuration  
# AWS_ACCESS_KEY_ID=your-lightsail-access-key
# AWS_SECRET_ACCESS_KEY=your-lightsail-secret-key
# AWS_REGION=us-east-1
# S3_BUCKET_NAME=noah-lightsail-backups
# S3_ENDPOINT=https://storage.us-east-1.amazonaws.com

#==============================================================================
# PRODUCTION OVERRIDES
#==============================================================================

# In production, override these via environment variables or CI/CD:
# - JWT_SECRET (generate a new secure secret)
# - AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
# - SMTP credentials if using email notifications
# - Set NOAH_ENV=production
# - Set SPRING_PROFILES_ACTIVE=production
# - Set NOAH_SECURITY_CORS_ENABLED=false
# - Set NOAH_API_DOCS_ENABLED=false

#===============================================================================
# SECURITY BEST PRACTICES
#===============================================================================
# 1. Use unique, strong credentials for each environment
# 2. Rotate credentials regularly (quarterly recommended)
# 3. Enable MFA on AWS accounts used for backup operations
# 4. Use IAM roles with minimal required permissions
# 5. Monitor access logs for unusual activity
# 6. Keep this .env file secure and never commit to version control
# 7. Use different buckets for different environments (dev/staging/prod)
# 8. Never use default credentials in production
# 9. Enable bucket versioning and lifecycle policies
# 10. Use encrypted connections (HTTPS/TLS) for all communications

#===============================================================================
# CREDENTIAL GENERATION HELPERS
#===============================================================================
# Generate secure Master Key:
#   openssl rand -base64 32
#   
# Generate secure JWT Secret:
#   openssl rand -base64 64
#
# Generate secure password:
#   openssl rand -base64 24
#
# Test S3 connectivity:
#   aws s3 ls s3://your-bucket-name --profile your-profile
#
# Validate JWT secret strength:
#   echo "your-jwt-secret" | wc -c  # Should be 32+ characters

#===============================================================================
# QUICK SETUP GUIDE
#===============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Generate secrets: openssl rand -base64 64
# 3. Configure S3 credentials (AWS/MinIO/Lightsail)
# 4. Set backup paths for your environment
# 5. Configure notification settings (optional)
# 6. Test with: ./scripts/validate-config.sh (if available)
# 7. Start application: ./gradlew bootRun